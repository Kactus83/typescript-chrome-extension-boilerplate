(()=>{"use strict";class t{}class e{static saveSettings(t){return new Promise(((e,r)=>{chrome.storage.sync.set({[this.SETTINGS_KEY]:t},(()=>{if(chrome.runtime.lastError)return r(new Error(chrome.runtime.lastError.message));e()}))}))}static getSettings(){return new Promise(((e,r)=>{chrome.storage.sync.get(this.SETTINGS_KEY,(n=>{if(chrome.runtime.lastError)return r(new Error(chrome.runtime.lastError.message));null==n[this.SETTINGS_KEY]?e(new t):e(n[this.SETTINGS_KEY])}))}))}static clearSettings(){return new Promise(((t,e)=>{chrome.storage.sync.clear((()=>{if(chrome.runtime.lastError)return e(new Error(chrome.runtime.lastError.message));t()}))}))}}e.SETTINGS_KEY="extensionSettings";var r=function(t,e,r,n){return new(r||(r=Promise))((function(s,i){function o(t){try{a(n.next(t))}catch(t){i(t)}}function c(t){try{a(n.throw(t))}catch(t){i(t)}}function a(t){var e;t.done?s(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(o,c)}a((n=n.apply(t,e||[])).next())}))};class n{static getSettings(){return r(this,void 0,void 0,(function*(){try{let r=yield e.getSettings();return 0===Object.keys(r).length&&(r=new t,yield e.saveSettings(r)),r}catch(t){throw new Error(`Failed to retrieve settings: ${t.message}`)}}))}static saveSettings(t){return r(this,void 0,void 0,(function*(){try{yield e.saveSettings(t)}catch(t){throw new Error(`Failed to save settings: ${t.message}`)}}))}}(new class{constructor(){console.log("Background script loaded")}init(){return t=this,e=void 0,s=function*(){console.log("Background script init");try{this.settings=yield n.getSettings(),console.log("Settings retrieved:",this.settings)}catch(t){console.error("Failed to initialize settings:",t.message)}},new((r=void 0)||(r=Promise))((function(n,i){function o(t){try{a(s.next(t))}catch(t){i(t)}}function c(t){try{a(s.throw(t))}catch(t){i(t)}}function a(t){var e;t.done?n(t.value):(e=t.value,e instanceof r?e:new r((function(t){t(e)}))).then(o,c)}a((s=s.apply(t,e||[])).next())}));var t,e,r,s}}).init()})();